/**
 * This class is generated by jOOQ
 */
package com.github.drinking_buddies.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Review extends org.jooq.impl.TableImpl<com.github.drinking_buddies.jooq.tables.records.ReviewRecord> {

	private static final long serialVersionUID = 272653267;

	/**
	 * The singleton instance of <code>review</code>
	 */
	public static final com.github.drinking_buddies.jooq.tables.Review REVIEW = new com.github.drinking_buddies.jooq.tables.Review();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.github.drinking_buddies.jooq.tables.records.ReviewRecord> getRecordType() {
		return com.github.drinking_buddies.jooq.tables.records.ReviewRecord.class;
	}

	/**
	 * The column <code>review.id</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review.id_beer</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.Integer> ID_BEER = createField("id_beer", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review.id_user</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.Integer> ID_USER = createField("id_user", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review.visual_score</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.Integer> VISUAL_SCORE = createField("visual_score", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review.smell_score</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.Integer> SMELL_SCORE = createField("smell_score", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review.taste_score</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.Integer> TASTE_SCORE = createField("taste_score", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review.feel_score</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.Integer> FEEL_SCORE = createField("feel_score", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review.text</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>review.post_time</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, java.lang.String> POST_TIME = createField("post_time", org.jooq.impl.SQLDataType.CHAR.length(16), this);

	/**
	 * Create a <code>review</code> table reference
	 */
	public Review() {
		super("review", com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA);
	}

	/**
	 * Create an aliased <code>review</code> table reference
	 */
	public Review(java.lang.String alias) {
		super(alias, com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA, com.github.drinking_buddies.jooq.tables.Review.REVIEW);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.ReviewRecord> getPrimaryKey() {
		return com.github.drinking_buddies.jooq.Keys.PK_REVIEW;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.ReviewRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.ReviewRecord>>asList(com.github.drinking_buddies.jooq.Keys.PK_REVIEW);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.github.drinking_buddies.jooq.tables.records.ReviewRecord, ?>>asList(com.github.drinking_buddies.jooq.Keys.FK_REVIEW_BEER_1, com.github.drinking_buddies.jooq.Keys.FK_REVIEW_USER_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.github.drinking_buddies.jooq.tables.Review as(java.lang.String alias) {
		return new com.github.drinking_buddies.jooq.tables.Review(alias);
	}
}
