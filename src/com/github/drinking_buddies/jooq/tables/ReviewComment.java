/**
 * This class is generated by jOOQ
 */
package com.github.drinking_buddies.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewComment extends org.jooq.impl.TableImpl<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord> {

	private static final long serialVersionUID = 373192160;

	/**
	 * The singleton instance of <code>review_comment</code>
	 */
	public static final com.github.drinking_buddies.jooq.tables.ReviewComment REVIEW_COMMENT = new com.github.drinking_buddies.jooq.tables.ReviewComment();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord> getRecordType() {
		return com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord.class;
	}

	/**
	 * The column <code>review_comment.id</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review_comment.id_review</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord, java.lang.Integer> ID_REVIEW = createField("id_review", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review_comment.id_user</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord, java.lang.Integer> ID_USER = createField("id_user", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>review_comment.text</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord, java.lang.String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>review_comment.post_time</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord, java.lang.String> POST_TIME = createField("post_time", org.jooq.impl.SQLDataType.CHAR.length(16), this);

	/**
	 * Create a <code>review_comment</code> table reference
	 */
	public ReviewComment() {
		super("review_comment", com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA);
	}

	/**
	 * Create an aliased <code>review_comment</code> table reference
	 */
	public ReviewComment(java.lang.String alias) {
		super(alias, com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA, com.github.drinking_buddies.jooq.tables.ReviewComment.REVIEW_COMMENT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord> getPrimaryKey() {
		return com.github.drinking_buddies.jooq.Keys.PK_REVIEW_COMMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord>>asList(com.github.drinking_buddies.jooq.Keys.PK_REVIEW_COMMENT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.github.drinking_buddies.jooq.tables.records.ReviewCommentRecord, ?>>asList(com.github.drinking_buddies.jooq.Keys.FK_REVIEW_COMMENT_REVIEW_1, com.github.drinking_buddies.jooq.Keys.FK_REVIEW_COMMENT_USER_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.github.drinking_buddies.jooq.tables.ReviewComment as(java.lang.String alias) {
		return new com.github.drinking_buddies.jooq.tables.ReviewComment(alias);
	}
}
