/**
 * This class is generated by jOOQ
 */
package com.github.drinking_buddies.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends org.jooq.impl.UpdatableRecordImpl<com.github.drinking_buddies.jooq.tables.records.UserRecord> implements org.jooq.Record11<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Float, java.lang.Float, java.lang.String, byte[]> {

	private static final long serialVersionUID = 1591644131;

	/**
	 * Setter for <code>user.id</code>. 
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>user.id</code>. 
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>user.name</code>. 
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>user.name</code>. 
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>user.facebook_name</code>. 
	 */
	public void setFacebookName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>user.facebook_name</code>. 
	 */
	public java.lang.String getFacebookName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>user.email</code>. 
	 */
	public void setEmail(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>user.email</code>. 
	 */
	public java.lang.String getEmail() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>user.city</code>. 
	 */
	public void setCity(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>user.city</code>. 
	 */
	public java.lang.String getCity() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>user.country</code>. 
	 */
	public void setCountry(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>user.country</code>. 
	 */
	public java.lang.String getCountry() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>user.phone</code>. 
	 */
	public void setPhone(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>user.phone</code>. 
	 */
	public java.lang.Integer getPhone() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>user.location_x</code>. 
	 */
	public void setLocationX(java.lang.Float value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>user.location_x</code>. 
	 */
	public java.lang.Float getLocationX() {
		return (java.lang.Float) getValue(7);
	}

	/**
	 * Setter for <code>user.location_y</code>. 
	 */
	public void setLocationY(java.lang.Float value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>user.location_y</code>. 
	 */
	public java.lang.Float getLocationY() {
		return (java.lang.Float) getValue(8);
	}

	/**
	 * Setter for <code>user.birthdate</code>. 
	 */
	public void setBirthdate(java.lang.String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>user.birthdate</code>. 
	 */
	public java.lang.String getBirthdate() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>user.picture</code>. 
	 */
	public void setPicture(byte[] value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>user.picture</code>. 
	 */
	public byte[] getPicture() {
		return (byte[]) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Float, java.lang.Float, java.lang.String, byte[]> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Float, java.lang.Float, java.lang.String, byte[]> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return com.github.drinking_buddies.jooq.tables.User.USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.github.drinking_buddies.jooq.tables.User.USER.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.github.drinking_buddies.jooq.tables.User.USER.FACEBOOK_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return com.github.drinking_buddies.jooq.tables.User.USER.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return com.github.drinking_buddies.jooq.tables.User.USER.CITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return com.github.drinking_buddies.jooq.tables.User.USER.COUNTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return com.github.drinking_buddies.jooq.tables.User.USER.PHONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Float> field8() {
		return com.github.drinking_buddies.jooq.tables.User.USER.LOCATION_X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Float> field9() {
		return com.github.drinking_buddies.jooq.tables.User.USER.LOCATION_Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field10() {
		return com.github.drinking_buddies.jooq.tables.User.USER.BIRTHDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field11() {
		return com.github.drinking_buddies.jooq.tables.User.USER.PICTURE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getFacebookName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getCity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getCountry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getPhone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Float value8() {
		return getLocationX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Float value9() {
		return getLocationY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value10() {
		return getBirthdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value11() {
		return getPicture();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(com.github.drinking_buddies.jooq.tables.User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(java.lang.Integer id, java.lang.String name, java.lang.String facebookName, java.lang.String email, java.lang.String city, java.lang.String country, java.lang.Integer phone, java.lang.Float locationX, java.lang.Float locationY, java.lang.String birthdate, byte[] picture) {
		super(com.github.drinking_buddies.jooq.tables.User.USER);

		setValue(0, id);
		setValue(1, name);
		setValue(2, facebookName);
		setValue(3, email);
		setValue(4, city);
		setValue(5, country);
		setValue(6, phone);
		setValue(7, locationX);
		setValue(8, locationY);
		setValue(9, birthdate);
		setValue(10, picture);
	}
}
