/**
 * This class is generated by jOOQ
 */
package com.github.drinking_buddies.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Address extends org.jooq.impl.TableImpl<com.github.drinking_buddies.jooq.tables.records.AddressRecord> {

	private static final long serialVersionUID = -604930373;

	/**
	 * The singleton instance of <code>address</code>
	 */
	public static final com.github.drinking_buddies.jooq.tables.Address ADDRESS = new com.github.drinking_buddies.jooq.tables.Address();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.github.drinking_buddies.jooq.tables.records.AddressRecord> getRecordType() {
		return com.github.drinking_buddies.jooq.tables.records.AddressRecord.class;
	}

	/**
	 * The column <code>address.id</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.AddressRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>address.street</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.AddressRecord, java.lang.String> STREET = createField("street", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>address.number</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.AddressRecord, java.lang.String> NUMBER = createField("number", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>address.zipcode</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.AddressRecord, java.lang.String> ZIPCODE = createField("zipcode", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>address.city</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.AddressRecord, java.lang.String> CITY = createField("city", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>address.country</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.AddressRecord, java.lang.String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * Create a <code>address</code> table reference
	 */
	public Address() {
		super("address", com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA);
	}

	/**
	 * Create an aliased <code>address</code> table reference
	 */
	public Address(java.lang.String alias) {
		super(alias, com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA, com.github.drinking_buddies.jooq.tables.Address.ADDRESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.AddressRecord> getPrimaryKey() {
		return com.github.drinking_buddies.jooq.Keys.PK_ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.AddressRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.AddressRecord>>asList(com.github.drinking_buddies.jooq.Keys.PK_ADDRESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.github.drinking_buddies.jooq.tables.Address as(java.lang.String alias) {
		return new com.github.drinking_buddies.jooq.tables.Address(alias);
	}
}
