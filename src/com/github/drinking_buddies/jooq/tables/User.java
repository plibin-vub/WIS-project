/**
 * This class is generated by jOOQ
 */
package com.github.drinking_buddies.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends org.jooq.impl.TableImpl<com.github.drinking_buddies.jooq.tables.records.UserRecord> {

	private static final long serialVersionUID = -1071715947;

	/**
	 * The singleton instance of <code>user</code>
	 */
	public static final com.github.drinking_buddies.jooq.tables.User USER = new com.github.drinking_buddies.jooq.tables.User();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.github.drinking_buddies.jooq.tables.records.UserRecord> getRecordType() {
		return com.github.drinking_buddies.jooq.tables.records.UserRecord.class;
	}

	/**
	 * The column <code>user.id</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.UserRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>user.first_name</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.UserRecord, java.lang.String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this);

	/**
	 * The column <code>user.last_name</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.UserRecord, java.lang.String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this);

	/**
	 * The column <code>user.oauth_name</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.UserRecord, java.lang.String> OAUTH_NAME = createField("oauth_name", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>user.oauth_provider</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.UserRecord, java.lang.String> OAUTH_PROVIDER = createField("oauth_provider", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * The column <code>user.url</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.UserRecord, java.lang.String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this);

	/**
	 * The column <code>user.bar_id</code>. 
	 */
	public final org.jooq.TableField<com.github.drinking_buddies.jooq.tables.records.UserRecord, java.lang.Integer> BAR_ID = createField("bar_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * Create a <code>user</code> table reference
	 */
	public User() {
		super("user", com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA);
	}

	/**
	 * Create an aliased <code>user</code> table reference
	 */
	public User(java.lang.String alias) {
		super(alias, com.github.drinking_buddies.jooq.DefaultSchema.DEFAULT_SCHEMA, com.github.drinking_buddies.jooq.tables.User.USER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.UserRecord> getPrimaryKey() {
		return com.github.drinking_buddies.jooq.Keys.PK_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.UserRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.github.drinking_buddies.jooq.tables.records.UserRecord>>asList(com.github.drinking_buddies.jooq.Keys.PK_USER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.github.drinking_buddies.jooq.tables.records.UserRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.github.drinking_buddies.jooq.tables.records.UserRecord, ?>>asList(com.github.drinking_buddies.jooq.Keys.FK_USER_BAR_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.github.drinking_buddies.jooq.tables.User as(java.lang.String alias) {
		return new com.github.drinking_buddies.jooq.tables.User(alias);
	}
}
